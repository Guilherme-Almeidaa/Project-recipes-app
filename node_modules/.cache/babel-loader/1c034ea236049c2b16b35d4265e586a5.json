{"ast":null,"code":"import { useEffect } from 'react';\nimport history from '../history/history';\nimport { getCurrenceRecipesFoodsFirstLetter, getCurrenceRecipesFoodsIngredients, getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport { getCurrenceRecipesDrinksFirstLetter, getCurrenceRecipesDrinksIngredients, getCurrenceRecipesDrinksName } from '../services/drinkAPI';\nconst checkLocation = history.location.pathname;\n\nconst showAlert = () => {\n  alert('Sua busca deve conter somente 1 (um) caracter');\n};\n\nconst useFetch = (filterSearch, searchInput, setRecipesFilters, getSearchBtn) => {\n  useEffect(() => {\n    if (checkLocation === '/bebidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesDrinksIngredients(searchInput).then(response => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesDrinksName(searchInput).then(response => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          showAlert();\n        } else {\n          getCurrenceRecipesDrinksFirstLetter(searchInput).then(response => setRecipesFilters(response.drinks));\n        }\n      }\n    } else if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesFoodsIngredients(searchInput).then(response => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesFoodsName(searchInput).then(response => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        showAlert();\n      } else {\n        getCurrenceRecipesFoodsFirstLetter(searchInput).then(response => setRecipesFilters(response.meals));\n      }\n    }\n  }, [getSearchBtn]);\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/hooks/useFetch.js"],"names":["useEffect","history","getCurrenceRecipesFoodsFirstLetter","getCurrenceRecipesFoodsIngredients","getCurrenceRecipesFoodsName","getCurrenceRecipesDrinksFirstLetter","getCurrenceRecipesDrinksIngredients","getCurrenceRecipesDrinksName","checkLocation","location","pathname","showAlert","alert","useFetch","filterSearch","searchInput","setRecipesFilters","getSearchBtn","then","response","drinks","length","meals"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SACIC,kCADJ,EAEIC,kCAFJ,EAGIC,2BAHJ,QAIS,qBAJT;AAKE,SACEC,mCADF,EAEEC,mCAFF,EAGEC,4BAHF,QAIO,sBAJP;AAMF,MAAMC,aAAa,GAAGP,OAAO,CAACQ,QAAR,CAAiBC,QAAvC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpBC,EAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,CAFH;;AAIA,MAAMC,QAAQ,GAAI,CAAEC,YAAF,EAAiBC,WAAjB,EAA+BC,iBAA/B,EAAkDC,YAAlD,KAAoE;AAClFjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,aAAa,KAAK,UAAtB,EAAkC;AAC9B,UAAIM,YAAY,KAAK,mBAArB,EAA0C;AACxCR,QAAAA,mCAAmC,CAACS,WAAD,CAAnC,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACC,MAAV,CADvC;AAED,OAHD,MAGO,IAAIN,YAAY,KAAK,YAArB,EAAmC;AACxCP,QAAAA,4BAA4B,CAACQ,WAAD,CAA5B,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACC,MAAV,CADvC;AAED,OAHM,MAGA,IAAIN,YAAY,KAAK,oBAArB,EAA2C;AAChD,YAAIC,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BV,UAAAA,SAAS;AACV,SAFD,MAEO;AACLN,UAAAA,mCAAmC,CAACU,WAAD,CAAnC,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACC,MAAV,CADvC;AAED;AACF;AACF,KAfH,MAeS,IAAIN,YAAY,KAAK,mBAArB,EAA0C;AAC/CX,MAAAA,kCAAkC,CAACY,WAAD,CAAlC,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACG,KAAV,CADvC;AAED,KAHM,MAGA,IAAIR,YAAY,KAAK,YAArB,EAAmC;AACxCV,MAAAA,2BAA2B,CAACW,WAAD,CAA3B,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACG,KAAV,CADvC;AAED,KAHM,MAGA,IAAIR,YAAY,KAAK,oBAArB,EAA2C;AAChD,UAAIC,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BV,QAAAA,SAAS;AACV,OAFD,MAEO;AACLT,QAAAA,kCAAkC,CAACa,WAAD,CAAlC,CACGG,IADH,CACSC,QAAD,IAAcH,iBAAiB,CAACG,QAAQ,CAACG,KAAV,CADvC;AAED;AACF;AACN,GA9BQ,EA8BP,CAACL,YAAD,CA9BO,CAAT;AA+BH,CAhCD;;AAkCA,eAAeJ,QAAf","sourcesContent":["import { useEffect } from 'react';\nimport history from '../history/history';\nimport {\n    getCurrenceRecipesFoodsFirstLetter,\n    getCurrenceRecipesFoodsIngredients,\n    getCurrenceRecipesFoodsName,\n  } from '../services/foodAPI';\n  import {\n    getCurrenceRecipesDrinksFirstLetter,\n    getCurrenceRecipesDrinksIngredients,\n    getCurrenceRecipesDrinksName,\n  } from '../services/drinkAPI';\n\nconst checkLocation = history.location.pathname;\n\nconst showAlert = () => {\n    alert('Sua busca deve conter somente 1 (um) caracter')\n  }\n\nconst useFetch  = ( filterSearch , searchInput , setRecipesFilters ,getSearchBtn ) => {\n    useEffect(() => {\n        if (checkLocation === '/bebidas') {\n            if (filterSearch === 'ingredients-input') {\n              getCurrenceRecipesDrinksIngredients(searchInput)\n                .then((response) => setRecipesFilters(response.drinks));\n            } else if (filterSearch === 'name-input') {\n              getCurrenceRecipesDrinksName(searchInput)\n                .then((response) => setRecipesFilters(response.drinks));\n            } else if (filterSearch === 'first-letter-input') {\n              if (searchInput.length > 1) {\n                showAlert()\n              } else {\n                getCurrenceRecipesDrinksFirstLetter(searchInput)\n                  .then((response) => setRecipesFilters(response.drinks));\n              }\n            }\n          } else if (filterSearch === 'ingredients-input') {\n            getCurrenceRecipesFoodsIngredients(searchInput)\n              .then((response) => setRecipesFilters(response.meals));\n          } else if (filterSearch === 'name-input') {\n            getCurrenceRecipesFoodsName(searchInput)\n              .then((response) => setRecipesFilters(response.meals));\n          } else if (filterSearch === 'first-letter-input') {\n            if (searchInput.length > 1) {\n              showAlert()\n            } else {\n              getCurrenceRecipesFoodsFirstLetter(searchInput)\n                .then((response) => setRecipesFilters(response.meals));\n            }\n          }\n    },[getSearchBtn])\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}