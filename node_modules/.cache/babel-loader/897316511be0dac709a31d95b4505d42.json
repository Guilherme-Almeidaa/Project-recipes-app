{"ast":null,"code":"import history from '../history/history';\nimport { getCurrenceRecipesFoodsFirstLetter, getCurrenceRecipesFoodsIngredients, getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport { getCurrenceRecipesDrinksFirstLetter, getCurrenceRecipesDrinksIngredients, getCurrenceRecipesDrinksName } from '../services/drinkAPI';\n\nconst showAlert = () => {\n  alert('Sua busca deve conter somente 1 (um) caracter');\n};\n\nconst requestApi = (filterSearch, setRecipesFilters, searchInput) => {\n  if (history.location.pathname === '/bebidas') {\n    if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesDrinksIngredients(searchInput).then(response => setRecipesFilters(response.drinks));\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesDrinksName(searchInput).then(response => setRecipesFilters(response.drinks));\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        showAlert();\n      } else {\n        getCurrenceRecipesDrinksFirstLetter(searchInput).then(response => setRecipesFilters(response.drinks));\n      }\n    }\n  } else if (filterSearch === 'ingredients-input') {\n    getCurrenceRecipesFoodsIngredients(searchInput).then(response => setRecipesFilters(response.meals));\n  } else if (filterSearch === 'name-input') {\n    getCurrenceRecipesFoodsName(searchInput).then(response => setRecipesFilters(response.meals));\n  } else if (filterSearch === 'first-letter-input') {\n    if (searchInput.length > 1) {\n      showAlert();\n    } else {\n      getCurrenceRecipesFoodsFirstLetter(searchInput).then(response => setRecipesFilters(response.meals));\n    }\n  }\n};\n\nexport default requestApi;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/hooks/useApi.js"],"names":["history","getCurrenceRecipesFoodsFirstLetter","getCurrenceRecipesFoodsIngredients","getCurrenceRecipesFoodsName","getCurrenceRecipesDrinksFirstLetter","getCurrenceRecipesDrinksIngredients","getCurrenceRecipesDrinksName","showAlert","alert","requestApi","filterSearch","setRecipesFilters","searchInput","location","pathname","then","response","drinks","length","meals"],"mappings":"AACA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,SACEC,kCADF,EAEEC,kCAFF,EAGEC,2BAHF,QAIO,qBAJP;AAKA,SACEC,mCADF,EAEEC,mCAFF,EAGEC,4BAHF,QAIO,sBAJP;;AAUA,MAAMC,SAAS,GAAG,MAAM;AACpBC,EAAAA,KAAK,CAAC,+CAAD,CAAL;AACD,CAFH;;AAIA,MAAMC,UAAU,GAAG,CAACC,YAAD,EAAgBC,iBAAhB,EAAmCC,WAAnC,KAAmD;AAClE,MAAIZ,OAAO,CAACa,QAAR,CAAiBC,QAAjB,KAA8B,UAAlC,EAA8C;AAC5C,QAAIJ,YAAY,KAAK,mBAArB,EAA0C;AACxCL,MAAAA,mCAAmC,CAACO,WAAD,CAAnC,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACC,MAAV,CADvC;AAED,KAHD,MAGO,IAAIP,YAAY,KAAK,YAArB,EAAmC;AACxCJ,MAAAA,4BAA4B,CAACM,WAAD,CAA5B,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACC,MAAV,CADvC;AAED,KAHM,MAGA,IAAIP,YAAY,KAAK,oBAArB,EAA2C;AAChD,UAAIE,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BX,QAAAA,SAAS;AACV,OAFD,MAEO;AACLH,QAAAA,mCAAmC,CAACQ,WAAD,CAAnC,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACC,MAAV,CADvC;AAED;AACF;AACF,GAfD,MAeO,IAAIP,YAAY,KAAK,mBAArB,EAA0C;AAC/CR,IAAAA,kCAAkC,CAACU,WAAD,CAAlC,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACG,KAAV,CADvC;AAED,GAHM,MAGA,IAAIT,YAAY,KAAK,YAArB,EAAmC;AACxCP,IAAAA,2BAA2B,CAACS,WAAD,CAA3B,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACG,KAAV,CADvC;AAED,GAHM,MAGA,IAAIT,YAAY,KAAK,oBAArB,EAA2C;AAChD,QAAIE,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BX,MAAAA,SAAS;AACV,KAFD,MAEO;AACLN,MAAAA,kCAAkC,CAACW,WAAD,CAAlC,CACGG,IADH,CACSC,QAAD,IAAcL,iBAAiB,CAACK,QAAQ,CAACG,KAAV,CADvC;AAED;AACF;AAEF,CA/BH;;AAmCE,eAAeV,UAAf","sourcesContent":["\nimport history from '../history/history';\n\nimport {\n  getCurrenceRecipesFoodsFirstLetter,\n  getCurrenceRecipesFoodsIngredients,\n  getCurrenceRecipesFoodsName,\n} from '../services/foodAPI';\nimport {\n  getCurrenceRecipesDrinksFirstLetter,\n  getCurrenceRecipesDrinksIngredients,\n  getCurrenceRecipesDrinksName,\n} from '../services/drinkAPI';\n\n\n\n\n\nconst showAlert = () => {\n    alert('Sua busca deve conter somente 1 (um) caracter')\n  }\n\nconst requestApi = (filterSearch , setRecipesFilters ,searchInput) => {\n    if (history.location.pathname === '/bebidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesDrinksIngredients(searchInput)\n          .then((response) => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesDrinksName(searchInput)\n          .then((response) => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          showAlert()\n        } else {\n          getCurrenceRecipesDrinksFirstLetter(searchInput)\n            .then((response) => setRecipesFilters(response.drinks));\n        }\n      }\n    } else if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesFoodsIngredients(searchInput)\n        .then((response) => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesFoodsName(searchInput)\n        .then((response) => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        showAlert()\n      } else {\n        getCurrenceRecipesFoodsFirstLetter(searchInput)\n          .then((response) => setRecipesFilters(response.meals));\n      }\n    }\n\n  }\n\n  \n\n  export default requestApi;"]},"metadata":{},"sourceType":"module"}