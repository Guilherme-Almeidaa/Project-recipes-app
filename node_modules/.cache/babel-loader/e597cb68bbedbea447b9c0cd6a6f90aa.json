{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/components/Category.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { getCategoryDrinks, getRecipesDrinksByCategory } from '../services/drinkAPI';\nimport { getCategoryFoods, getRecipesFoodsByCategory } from '../services/foodAPI';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction Category() {\n  const {\n    setRecipesFilters,\n    btnFilter,\n    setBtnFilter,\n    initialRecipes\n  } = useContext(RecipesContext);\n  const [categorys, setCategorys] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n  const [select, setSelect] = useState(false);\n  const history = useHistory();\n  const checkLocation = history.location.pathname;\n  useEffect(() => {\n    const firstRecipe = 0;\n    const lastRecipe = 5;\n\n    if (checkLocation === '/bebidas') {\n      getCategoryDrinks().then(response => setCategorys(response.drinks.slice(firstRecipe, lastRecipe)));\n    }\n\n    if (checkLocation === '/comidas') {\n      getCategoryFoods().then(response => setCategorys(response.meals.slice(firstRecipe, lastRecipe)));\n    }\n  }, []);\n\n  const handleFilter = ({\n    target\n  }, filter) => {\n    setSelect(!select);\n\n    if (target.className !== 'button-category-click') {\n      target.className = 'button-category-click';\n    } else {\n      target.className = 'button-category';\n    }\n\n    if (filter === 'Goat') {\n      setBtnFilter(!btnFilter);\n    }\n\n    if (filterSelected === filter) {\n      setRecipesFilters(initialRecipes);\n      setFilterSelected('');\n    }\n\n    if (filterSelected === '' || filterSelected !== filter) {\n      const firstRecipe = 0;\n      const lastRecipe = 12;\n      setFilterSelected(filter);\n\n      if (checkLocation === '/bebidas') {\n        getRecipesDrinksByCategory(filter).then(response => setRecipesFilters(response.drinks.slice(firstRecipe, lastRecipe)));\n      }\n\n      if (checkLocation === '/comidas') {\n        getRecipesFoodsByCategory(filter).then(response => setRecipesFilters(response.meals.slice(firstRecipe, lastRecipe)));\n      }\n    }\n  };\n\n  const handleAll = () => {\n    setRecipesFilters(initialRecipes);\n    setFilterSelected('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, categorys.map(category => {\n    const name = category.strCategory;\n    const dataTestId = `${name}-category-filter`;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-category\",\n      \"data-testid\": dataTestId,\n      type: \"button\",\n      onClick: target => handleFilter(target, name),\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, name);\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"All-category-filter\",\n    type: \"button\",\n    onClick: () => handleAll(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"All\"));\n}\n\nexport default Category;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/components/Category.js"],"names":["React","useContext","useEffect","useState","useHistory","getCategoryDrinks","getRecipesDrinksByCategory","getCategoryFoods","getRecipesFoodsByCategory","RecipesContext","Category","setRecipesFilters","btnFilter","setBtnFilter","initialRecipes","categorys","setCategorys","filterSelected","setFilterSelected","select","setSelect","history","checkLocation","location","pathname","firstRecipe","lastRecipe","then","response","drinks","slice","meals","handleFilter","target","filter","className","handleAll","map","category","name","strCategory","dataTestId"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n  getCategoryDrinks,\n  getRecipesDrinksByCategory,\n} from '../services/drinkAPI';\nimport {\n  getCategoryFoods,\n  getRecipesFoodsByCategory,\n} from '../services/foodAPI';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction Category() {\n  const {\n    setRecipesFilters,\n    btnFilter,\n    setBtnFilter,\n    initialRecipes,\n  } = useContext(RecipesContext);\n\n  const [categorys, setCategorys] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n  const [select, setSelect] = useState(false);\n\n  const history = useHistory();\n  const checkLocation = history.location.pathname;\n\n  useEffect(() => {\n    const firstRecipe = 0;\n    const lastRecipe = 5;\n    if (checkLocation === '/bebidas') {\n      getCategoryDrinks().then((response) => setCategorys(response.drinks\n        .slice(firstRecipe, lastRecipe)));\n    }\n    if (checkLocation === '/comidas') {\n      getCategoryFoods().then((response) => setCategorys(response.meals\n        .slice(firstRecipe, lastRecipe)));\n    }\n  }, []);\n\n  const handleFilter = ({ target }, filter) => {\n    setSelect(!select);\n    if (target.className !== 'button-category-click') {\n      target.className = 'button-category-click';\n    } else {\n      target.className = 'button-category';\n    }\n    if (filter === 'Goat') {\n      setBtnFilter(!btnFilter);\n    }\n\n    if (filterSelected === filter) {\n      setRecipesFilters(initialRecipes);\n      setFilterSelected('');\n    }\n\n    if (filterSelected === '' || filterSelected !== filter) {\n      const firstRecipe = 0;\n      const lastRecipe = 12;\n      setFilterSelected(filter);\n\n      if (checkLocation === '/bebidas') {\n        getRecipesDrinksByCategory(filter)\n          .then((response) => setRecipesFilters(response.drinks\n            .slice(firstRecipe, lastRecipe)));\n      }\n      if (checkLocation === '/comidas') {\n        getRecipesFoodsByCategory(filter)\n          .then((response) => setRecipesFilters(response.meals\n            .slice(firstRecipe, lastRecipe)));\n      }\n    }\n  };\n\n  const handleAll = () => {\n    setRecipesFilters(initialRecipes);\n    setFilterSelected('');\n  };\n\n  return (\n    <div>\n      {categorys.map((category) => {\n        const name = category.strCategory;\n        const dataTestId = `${name}-category-filter`;\n        return (\n          <button\n            className=\"button-category\"\n            data-testid={ dataTestId }\n            type=\"button\"\n            onClick={ (target) => handleFilter(target, name) }\n            key={ name }\n          >\n            {name}\n          </button>\n        );\n      })}\n      <button\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={ () => handleAll() }\n      >\n        All\n      </button>\n    </div>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}