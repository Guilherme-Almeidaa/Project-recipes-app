{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\nimport { getCurrenceRecipesFoodsFirstLetter, getCurrenceRecipesFoodsIngredients, getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport { getCurrenceRecipesDrinksFirstLetter, getCurrenceRecipesDrinksIngredients, getCurrenceRecipesDrinksName } from '../services/drinkAPI';\n\nfunction Provider({\n  children\n}) {\n  // const retrieveEmail = () => {\n  // const storageEmail = JSON.parse(localStorage.getItem('user'));\n  // return storageEmail === undefined ? '' : storageEmail.email;\n  // };\n  const showAlert = () => alert('Sua busca deve conter somente 1 (um) caracter');\n\n  const [userEmail, setUserEmail] = useState('');\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n\n  const requestApi = () => {\n    if (history.location.pathname === '/bebidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesDrinksIngredients(searchInput).then(response => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesDrinksName(searchInput).then(response => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          showAlert();\n        } else {\n          getCurrenceRecipesDrinksFirstLetter(searchInput).then(response => setRecipesFilters(response.drinks));\n        }\n      }\n    } else if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesFoodsIngredients(searchInput).then(response => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesFoodsName(searchInput).then(response => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        showAlert();\n      } else {\n        getCurrenceRecipesFoodsFirstLetter(searchInput).then(response => setRecipesFilters(response.meals));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (recipesFilters !== null) {\n      if (recipesFilters.length === 1) {\n        const lastHIstory = history.location.pathname;\n        const zero = 0;\n        let id;\n\n        if (lastHIstory === '/bebidas') {\n          const {\n            idDrink\n          } = recipesFilters[zero];\n          id = idDrink;\n        } else {\n          const {\n            idMeal\n          } = recipesFilters[zero];\n          id = idMeal;\n        }\n\n        history.push(`${lastHIstory}/${id}`);\n      }\n    }\n  }, [recipesFilters]);\n  useEffect(requestApi, [getSearchBtn]);\n  const context = {\n    filterSearch,\n    userEmail,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setUserEmail,\n    setSearchRender\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","history","getCurrenceRecipesFoodsFirstLetter","getCurrenceRecipesFoodsIngredients","getCurrenceRecipesFoodsName","getCurrenceRecipesDrinksFirstLetter","getCurrenceRecipesDrinksIngredients","getCurrenceRecipesDrinksName","Provider","children","showAlert","alert","userEmail","setUserEmail","searchRender","setSearchRender","filterSearch","setFilterSearch","recipesFilters","setRecipesFilters","searchInput","setSearchInput","getSearchBtn","setSearchBtn","requestApi","location","pathname","then","response","drinks","length","meals","lastHIstory","zero","id","idDrink","idMeal","push","context","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\nimport {\n  getCurrenceRecipesFoodsFirstLetter,\n  getCurrenceRecipesFoodsIngredients,\n  getCurrenceRecipesFoodsName,\n} from '../services/foodAPI';\nimport {\n  getCurrenceRecipesDrinksFirstLetter,\n  getCurrenceRecipesDrinksIngredients,\n  getCurrenceRecipesDrinksName,\n} from '../services/drinkAPI';\n\nfunction Provider({ children }) {\n  // const retrieveEmail = () => {\n  // const storageEmail = JSON.parse(localStorage.getItem('user'));\n  // return storageEmail === undefined ? '' : storageEmail.email;\n  // };\n  const showAlert = () => alert('Sua busca deve conter somente 1 (um) caracter');\n  \n  const [userEmail, setUserEmail] = useState('');\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n\n  const requestApi = () => {\n    if (history.location.pathname === '/bebidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesDrinksIngredients(searchInput)\n          .then((response) => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesDrinksName(searchInput)\n          .then((response) => setRecipesFilters(response.drinks));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          showAlert();\n        } else {\n          getCurrenceRecipesDrinksFirstLetter(searchInput)\n            .then((response) => setRecipesFilters(response.drinks));\n        }\n      }\n    } else if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesFoodsIngredients(searchInput)\n        .then((response) => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesFoodsName(searchInput)\n        .then((response) => setRecipesFilters(response.meals));\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        showAlert();\n      } else {\n        getCurrenceRecipesFoodsFirstLetter(searchInput)\n          .then((response) => setRecipesFilters(response.meals));\n      }\n    }\n\n\n  };\n\n\n\n  useEffect(() => {\n\n    if (recipesFilters !== null) {\n      if (recipesFilters.length === 1) {\n        const lastHIstory = history.location.pathname\n        const zero = 0\n        let id;\n        if (lastHIstory === '/bebidas') {\n          const { idDrink } = recipesFilters[zero]\n          id = idDrink\n        } else {\n          const { idMeal } = recipesFilters[zero]\n          id = idMeal\n        }\n        history.push(`${lastHIstory}/${id}`)\n      }\n    }\n  }, [recipesFilters])\n\n  useEffect(requestApi,\n    [getSearchBtn]);\n\n  const context = {\n    filterSearch,\n    userEmail,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setUserEmail,\n    setSearchRender,\n  };\n\n  return (\n    <RecipesContext.Provider value={context}>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}