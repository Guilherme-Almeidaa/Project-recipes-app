{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/RecipesMade.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport perfilIcon from \"../images/profileIcon.svg\";\nimport share from \"../images/shareIcon.svg\";\nimport { ZERO, TWO_THOUSAND } from '../services/helpers';\n\nfunction RecipesMade() {\n  const recipesMade = JSON.parse(localStorage.getItem('doneRecipes'));\n  const TWO = 2;\n  const [copyText, setCopyText] = useState('');\n  const [recipesDone, setRecipesDone] = useState(recipesMade);\n\n  const filterRecipes = type => {\n    if (type === 'all') {\n      setRecipesDone(recipesMade);\n    } else {\n      const recipesFilter = recipesMade.filter(recipe => recipe.type === type);\n      setRecipesDone(recipesFilter);\n    }\n  };\n\n  const handleCopyClick = food => {\n    copy(`http://localhost:3000/${food.type}s/${food.id}`);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), TWO_THOUSAND);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Receitas Feitas\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"profile-top-btn\",\n    src: perfilIcon,\n    alt: \"perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => filterRecipes('all'),\n    \"data-testid\": \"filter-by-all-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => filterRecipes('comida'),\n    \"data-testid\": \"filter-by-food-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => filterRecipes('bebida'),\n    \"data-testid\": \"filter-by-drink-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Drinks\")), recipesMade ? recipesDone.map((recipe, index) => {\n    if (recipe.type === 'comida') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/comidas/${recipe.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"200px\",\n        \"data-testid\": `${index}-horizontal-image`,\n        alt: \"recipe\",\n        src: recipe.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => handleCopyClick(recipe),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        \"data-testid\": `${index}-horizontal-share-btn`,\n        alt: \"share\",\n        src: share,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, copyText), /*#__PURE__*/React.createElement(Link, {\n        to: `/comidas/${recipe.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-horizontal-name`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, recipe.name)), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-horizontal-top-text`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, `${recipe.area} - ${recipe.category}`), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-horizontal-done-date`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, recipe.doneDate), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, recipe.tags.slice(ZERO, TWO).map((tag, indexTag) => /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": `${index}-${tag}-horizontal-tag`,\n        key: indexTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, tag))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/bebidas/${recipe.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"200px\",\n      \"data-testid\": `${index}-horizontal-image`,\n      alt: \"recipe\",\n      src: recipe.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => handleCopyClick(recipe.id, recipe.type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      alt: \"share\",\n      src: share,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, copyText), /*#__PURE__*/React.createElement(Link, {\n      to: `/bebidas/${recipe.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, recipe.name)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, recipe.alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, recipe.doneDate));\n  }) : null);\n}\n\nexport default RecipesMade;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/RecipesMade.js"],"names":["React","useState","Link","copy","ZERO","TWO_THOUSAND","RecipesMade","recipesMade","JSON","parse","localStorage","getItem","TWO","copyText","setCopyText","recipesDone","setRecipesDone","filterRecipes","type","recipesFilter","filter","recipe","handleCopyClick","food","id","setInterval","perfilIcon","map","index","image","share","name","area","category","doneDate","tags","slice","tag","indexTag","alcoholicOrNot"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport perfilIcon from '../images/profileIcon.svg';\nimport share from '../images/shareIcon.svg';\nimport { ZERO, TWO_THOUSAND } from '../services/helpers';\n\nfunction RecipesMade() {\n    const recipesMade = JSON.parse(localStorage.getItem('doneRecipes'));\n    const TWO = 2;\n    const [copyText, setCopyText] = useState('');\n    const [recipesDone, setRecipesDone] = useState(recipesMade);\n\n    const filterRecipes = (type) => {\n        if (type === 'all') {\n            setRecipesDone(recipesMade);\n        } else {\n            const recipesFilter = recipesMade.filter((recipe) => recipe.type === type);\n            setRecipesDone(recipesFilter);\n        }\n    };\n\n    const handleCopyClick = (food) => {\n        copy(`http://localhost:3000/${food.type}s/${food.id}`);\n        setCopyText('Link copiado!');\n        setInterval(() => setCopyText(''), TWO_THOUSAND);\n    };\n\n    return (\n        <div>\n            <header>\n                <h1 data-testid=\"page-title\">\n                    Receitas Feitas\n        </h1>\n                <Link to=\"/perfil\">\n                    <button type=\"button\">\n                        <img\n                            data-testid=\"profile-top-btn\"\n                            src={perfilIcon}\n                            alt=\"perfil\"\n                        />\n                    </button>\n                </Link>\n            </header>\n            <div>\n                <button\n                    type=\"button\"\n                    onClick={() => filterRecipes('all')}\n                    data-testid=\"filter-by-all-btn\"\n                >\n                    All\n        </button>\n                <button\n                    type=\"button\"\n                    onClick={() => filterRecipes('comida')}\n                    data-testid=\"filter-by-food-btn\"\n                >\n                    Food\n        </button>\n                <button\n                    type=\"button\"\n                    onClick={() => filterRecipes('bebida')}\n                    data-testid=\"filter-by-drink-btn\"\n                >\n                    Drinks\n        </button>\n            </div>\n            {recipesMade ? recipesDone.map((recipe, index) => {\n                if (recipe.type === 'comida') {\n                    return (\n                        <div key={index}>\n                            <Link to={`/comidas/${recipe.id}`}>\n                                <img\n                                    width=\"200px\"\n                                    data-testid={`${index}-horizontal-image`}\n                                    alt=\"recipe\"\n                                    src={recipe.image}\n                                />\n                            </Link>\n                            <button\n                                type=\"button\"\n                                onClick={() => handleCopyClick(recipe)}\n                            >\n                                <img\n                                    data-testid={`${index}-horizontal-share-btn`}\n                                    alt=\"share\"\n                                    src={share}\n                                />\n                            </button>\n                            <p>{copyText}</p>\n                            <Link\n                                to={`/comidas/${recipe.id}`}\n                            >\n                                <p data-testid={`${index}-horizontal-name`}>{recipe.name}</p>\n                            </Link>\n                            <p\n                                data-testid={`${index}-horizontal-top-text`}\n                            >\n                                {`${recipe.area} - ${recipe.category}`}\n                            </p>\n\n                            <p\n                                data-testid={`${index}-horizontal-done-date`}\n                            >\n                                {recipe.doneDate}\n                            </p>\n                            <p>\n                                {recipe.tags.slice(ZERO, TWO).map((tag, indexTag) => (\n                                    <p\n                                        data-testid={`${index}-${tag}-horizontal-tag`}\n                                        key={indexTag}\n                                    >\n                                        {tag}\n                                    </p>))}\n                            </p>\n                        </div>\n\n                    );\n                }\n                return (\n                    <div key={index}>\n                        <Link to={`/bebidas/${recipe.id}`}>\n                            <img\n                                width=\"200px\"\n                                data-testid={`${index}-horizontal-image`}\n                                alt=\"recipe\" src={recipe.image} />\n                        </Link>\n                        <button\n                            type=\"button\"\n                            onClick={() => handleCopyClick(recipe.id, recipe.type)}\n                        >\n                            <img data-testid={`${index}-horizontal-share-btn`} alt=\"share\" src={share} />\n                        </button>\n                        <p>{copyText}</p>\n                        <Link to={`/bebidas/${recipe.id}`}>\n                            <p data-testid={`${index}-horizontal-name`}>{recipe.name}</p>\n                        </Link>\n                        <p data-testid={`${index}-horizontal-top-text`}>{recipe.alcoholicOrNot}</p>\n\n                        <p data-testid={`${index}-horizontal-done-date`}>{recipe.doneDate}</p>\n                    </div>\n                );\n            }) : null}\n\n        </div>\n\n    );\n}\n\nexport default RecipesMade;\n"]},"metadata":{},"sourceType":"module"}