{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/DrinkDetails.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAPI, handleIngredients, TWO_THOUSAND, SIX } from '../services/helpers';\nimport '../style/recipeDetail.css';\nimport { Carousel } from 'antd';\n\nfunction DrinkDetails() {\n  const [recipeDetailDrink, setRecipeDetailDrink] = useState({});\n  const [buttonClassName, setButtonClassName] = useState('fixedbutton');\n  const [buttonText] = useState('Iniciar Receita');\n  const [recommendation, setRecommendation] = useState(['']);\n  const [copyText, setCopyText] = useState('');\n  const [favorited, setFavorited] = useState(); // src: https://reactrouter.com/web/api/Hooks\n\n  const history = useHistory();\n  const {\n    pathname\n  } = history.location;\n  const drinkRecipeId = pathname.split('/')[2];\n  const {\n    setDrinkRecipeId,\n    setMealRecipeId\n  } = useContext(RecipesContext);\n  useEffect(() => {\n    const getAPI = async () => {\n      const drink = await fetchAPI(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${drinkRecipeId}`);\n      const recipeDrink = await drink.drinks;\n      setRecipeDetailDrink(recipeDrink[0]);\n      setDrinkRecipeId(drinkRecipeId);\n    };\n\n    getAPI();\n  }, [drinkRecipeId, setDrinkRecipeId, setRecipeDetailDrink]);\n  useEffect(() => {\n    const fetchRecommendation = async () => {\n      const foods = await fetchAPI('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const foodsData = await foods.meals;\n      setRecommendation(foodsData);\n    };\n\n    fetchRecommendation();\n  }, []);\n\n  const handleCopyClick = () => {\n    copy(window.location.href);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), TWO_THOUSAND);\n  };\n\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) localStorage.favoriteRecipes = JSON.stringify([]);\n    const favoriteStorage = JSON.parse(localStorage.favoriteRecipes).filter(recipe => recipe.id === drinkRecipeId);\n\n    if (favoriteStorage.length >= 1) {\n      setFavorited(blackHeartIcon);\n    } else {\n      setFavorited(whiteHeartIcon);\n    }\n  }, [drinkRecipeId]);\n  useEffect(() => {\n    if (!localStorage.doneRecipes) localStorage.doneRecipes = JSON.stringify([]);\n    const doneStorage = JSON.parse(localStorage.doneRecipes).filter(recipe => recipe.id === drinkRecipeId);\n\n    if (doneStorage.length >= 1) {\n      setButtonClassName('fixedbutton hidden');\n    } else {\n      setButtonClassName('fixedbutton');\n    }\n  }, [drinkRecipeId]);\n\n  const handleFavoriteClick = () => {\n    if (favorited === whiteHeartIcon) {\n      setFavorited(blackHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeDetailDrink.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipeDetailDrink.strCategory,\n        alcoholicOrNot: recipeDetailDrink.strAlcoholic,\n        name: recipeDetailDrink.strDrink,\n        image: recipeDetailDrink.strDrinkThumb\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    } else {\n      setFavorited(whiteHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.filter(recipe => recipe.id !== drinkRecipeId);\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    className: \"img-recipe\",\n    src: recipeDetailDrink.strDrinkThumb,\n    alt: \"drink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, recipeDetailDrink.strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleCopyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavoriteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorited,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, copyText), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, recipeDetailDrink.strAlcoholic), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, handleIngredients(recipeDetailDrink)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, recipeDetailDrink.strInstructions), /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, recommendation && recommendation.length && recommendation.filter((_, indexs) => indexs < SIX).map((meals, index) => /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-recomendation-title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 18\n    }\n  }, meals.strMeal), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => setMealRecipeId(meals.idMeal),\n    to: `/comidas/${meals.idMeal}`,\n    className: \"container-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-recipe\",\n    \"data-testid\": `${index}-card-img`,\n    src: meals.strMealThumb,\n    alt: meals.strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Link, {\n    to: `/bebidas/${drinkRecipeId}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClassName,\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, buttonText)));\n}\n\nexport default DrinkDetails;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/DrinkDetails.js"],"names":["React","useState","useContext","useEffect","Link","useHistory","copy","RecipesContext","fetchAPI","handleIngredients","TWO_THOUSAND","SIX","Carousel","DrinkDetails","recipeDetailDrink","setRecipeDetailDrink","buttonClassName","setButtonClassName","buttonText","recommendation","setRecommendation","copyText","setCopyText","favorited","setFavorited","history","pathname","location","drinkRecipeId","split","setDrinkRecipeId","setMealRecipeId","getAPI","drink","recipeDrink","drinks","fetchRecommendation","foods","foodsData","meals","handleCopyClick","window","href","setInterval","localStorage","favoriteRecipes","JSON","stringify","favoriteStorage","parse","filter","recipe","id","length","blackHeartIcon","whiteHeartIcon","doneRecipes","doneStorage","handleFavoriteClick","newFavoriteStorage","concat","idDrink","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","shareIcon","strInstructions","_","indexs","map","index","strMeal","idMeal","strMealThumb"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAPI, handleIngredients,\n  TWO_THOUSAND, SIX } from '../services/helpers';\nimport '../style/recipeDetail.css';\nimport { Carousel } from 'antd';\n\nfunction DrinkDetails() {\n  const [recipeDetailDrink, setRecipeDetailDrink] = useState({});\n  const [buttonClassName, setButtonClassName] = useState('fixedbutton');\n  const [buttonText] = useState('Iniciar Receita');\n  const [recommendation, setRecommendation] = useState(['']);\n  const [copyText, setCopyText] = useState('');\n  const [favorited, setFavorited] = useState();\n  // src: https://reactrouter.com/web/api/Hooks\n  const history = useHistory();\n  const { pathname } = history.location;\n  const drinkRecipeId = pathname.split('/')[2];\n\n  const {\n    setDrinkRecipeId,\n    setMealRecipeId,\n  } = useContext(RecipesContext);\n\n  useEffect(() => {\n    const getAPI = async () => {\n      const drink = await fetchAPI(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${drinkRecipeId}`);\n      const recipeDrink = await drink.drinks;\n      setRecipeDetailDrink(recipeDrink[0]);\n      setDrinkRecipeId(drinkRecipeId);\n    };\n    getAPI();\n  }, [drinkRecipeId, setDrinkRecipeId, setRecipeDetailDrink]);\n\n  useEffect(() => {\n    const fetchRecommendation = async () => {\n      const foods = await fetchAPI('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const foodsData = await foods.meals;\n      setRecommendation(foodsData);\n    };\n    fetchRecommendation();\n  }, []);\n\n  const handleCopyClick = () => {\n    copy(window.location.href);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), TWO_THOUSAND);\n  };\n\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) localStorage.favoriteRecipes = JSON.stringify([]);\n    const favoriteStorage = JSON.parse(localStorage.favoriteRecipes)\n      .filter((recipe) => recipe.id === drinkRecipeId);\n    if (favoriteStorage.length >= 1) {\n      setFavorited(blackHeartIcon);\n    } else {\n      setFavorited(whiteHeartIcon);\n    }\n  }, [drinkRecipeId]);\n\n  useEffect(() => {\n    if (!localStorage.doneRecipes) localStorage.doneRecipes = JSON.stringify([]);\n    const doneStorage = JSON.parse(localStorage.doneRecipes)\n      .filter((recipe) => recipe.id === drinkRecipeId);\n    if (doneStorage.length >= 1) {\n      setButtonClassName('fixedbutton hidden');\n    } else {\n      setButtonClassName('fixedbutton');\n    }\n  }, [drinkRecipeId]);\n\n  const handleFavoriteClick = () => {\n    if (favorited === whiteHeartIcon) {\n      setFavorited(blackHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeDetailDrink.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipeDetailDrink.strCategory,\n        alcoholicOrNot: recipeDetailDrink.strAlcoholic,\n        name: recipeDetailDrink.strDrink,\n        image: recipeDetailDrink.strDrinkThumb,\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    } else {\n      setFavorited(whiteHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage\n        .filter((recipe) => recipe.id !== drinkRecipeId);\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"container-img\" >\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"img-recipe\"\n        src={ recipeDetailDrink.strDrinkThumb }\n        alt=\"drink\"\n      />\n      </div>\n      <h2 data-testid=\"recipe-title\">{recipeDetailDrink.strDrink}</h2>\n      <button type=\"button\" onClick={ handleCopyClick }>\n        <img data-testid=\"share-btn\" src={ shareIcon } alt=\"share\" />\n      </button>\n      <button type=\"button\" onClick={ handleFavoriteClick }>\n        <img data-testid=\"favorite-btn\" src={ favorited } alt=\"favorite\" />\n      </button>\n      <p>{copyText}</p>\n      <p data-testid=\"recipe-category\">{recipeDetailDrink.strAlcoholic}</p>\n      <ul>\n        {handleIngredients(recipeDetailDrink)}\n      </ul>\n      <p data-testid=\"instructions\">{recipeDetailDrink.strInstructions}</p>\n      <Carousel>\n        {\n          recommendation && recommendation.length && recommendation\n            .filter((_, indexs) => indexs < SIX)\n            .map((meals, index) => (\n              <div\n                data-testid={ `${index}-recomendation-card` }\n                key=\"index\"\n              >\n                 <p\n                  data-testid={ `${index}-recomendation-title` }\n                >\n                  {meals.strMeal}\n                </p>\n                <Link\n                  onClick={ () => setMealRecipeId(meals.idMeal) }\n                  to={ `/comidas/${meals.idMeal}` }\n                  className=\"container-img\"\n                >\n                  <img\n                    className=\"img-recipe\"\n                    data-testid={ `${index}-card-img` }\n                    src={ meals.strMealThumb }\n                    alt={ meals.strMeal }\n                  />\n                </Link>\n               </div>\n            ))\n        }\n      </Carousel>\n      <Link to={ `/bebidas/${drinkRecipeId}/in-progress` }>\n        <button\n          className={ buttonClassName }\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          {buttonText}\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default DrinkDetails;\n"]},"metadata":{},"sourceType":"module"}