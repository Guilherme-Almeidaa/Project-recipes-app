{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\n\nfunction Provider({\n  children\n}) {\n  const messageAlert = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\n  const showAlertNotFound = () => alert(messageAlert);\n\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n  const [mealRecipeId, setMealRecipeId] = useState('');\n  const [drinkRecipeId, setDrinkRecipeId] = useState('');\n  const [recipeDetailFood, setRecipeDetailFood] = useState({});\n  const [recipeDetailDrink, setRecipeDetailDrink] = useState({});\n\n  const checkRecipe = () => {\n    if (recipesFilters === null) {\n      showAlertNotFound();\n    }\n  };\n\n  useEffect(checkRecipe, [recipesFilters]);\n  const context = {\n    mealRecipeId,\n    drinkRecipeId,\n    recipeDetailFood,\n    recipeDetailDrink,\n    filterSearch,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setRecipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setSearchRender,\n    setMealRecipeId,\n    setDrinkRecipeId,\n    setRecipeDetailFood,\n    setRecipeDetailDrink\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","Provider","children","messageAlert","showAlertNotFound","alert","searchRender","setSearchRender","filterSearch","setFilterSearch","recipesFilters","setRecipesFilters","searchInput","setSearchInput","getSearchBtn","setSearchBtn","mealRecipeId","setMealRecipeId","drinkRecipeId","setDrinkRecipeId","recipeDetailFood","setRecipeDetailFood","recipeDetailDrink","setRecipeDetailDrink","checkRecipe","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAMC,YAAY,GAAG,kEAArB;;AACA,QAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAACF,YAAD,CAArC;;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,YAAD,EAAeC,YAAf,IAA+BlB,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACyB,iBAAD,EAAoBC,oBAApB,IAA4C1B,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAM2B,WAAW,GAAG,MAAM;AACxB,QAAId,cAAc,KAAK,IAAvB,EAA6B;AAC3BN,MAAAA,iBAAiB;AAClB;AACF,GAJD;;AAMAN,EAAAA,SAAS,CACP0B,WADO,EAEP,CAACd,cAAD,CAFO,CAAT;AAKA,QAAMe,OAAO,GAAG;AACdT,IAAAA,YADc;AAEdE,IAAAA,aAFc;AAGdE,IAAAA,gBAHc;AAIdE,IAAAA,iBAJc;AAKdd,IAAAA,YALc;AAMdF,IAAAA,YANc;AAOdM,IAAAA,WAPc;AAQdE,IAAAA,YARc;AASdJ,IAAAA,cATc;AAUdC,IAAAA,iBAVc;AAWdI,IAAAA,YAXc;AAYdF,IAAAA,cAZc;AAadJ,IAAAA,eAbc;AAcdF,IAAAA,eAdc;AAedU,IAAAA,eAfc;AAgBdE,IAAAA,gBAhBc;AAiBdE,IAAAA,mBAjBc;AAkBdE,IAAAA;AAlBc,GAAhB;AAsBA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,QADH,CADF;AAKD;;AAEDD,QAAQ,CAACyB,SAAT,GAAqB;AACnBxB,EAAAA,QAAQ,EAAEH,SAAS,CAAC4B,IAAV,CAAeC;AADN,CAArB;AAIA,eAAe3B,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\n\nfunction Provider({ children }) {\n  const messageAlert = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n  const showAlertNotFound = () => alert(messageAlert);\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n  const [mealRecipeId, setMealRecipeId] = useState('');\n  const [drinkRecipeId, setDrinkRecipeId] = useState('');\n  const [recipeDetailFood, setRecipeDetailFood] = useState({});\n  const [recipeDetailDrink, setRecipeDetailDrink] = useState({});\n\n  const checkRecipe = () => {\n    if (recipesFilters === null) {\n      showAlertNotFound();\n    }\n  };\n\n  useEffect(\n    checkRecipe,\n    [recipesFilters],\n  );\n\n  const context = {\n    mealRecipeId,\n    drinkRecipeId,\n    recipeDetailFood,\n    recipeDetailDrink,\n    filterSearch,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setRecipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setSearchRender,\n    setMealRecipeId,\n    setDrinkRecipeId,\n    setRecipeDetailFood,\n    setRecipeDetailDrink,\n\n  };\n\n  return (\n    <RecipesContext.Provider value={ context }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}