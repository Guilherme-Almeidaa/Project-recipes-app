{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/FoodRecipes.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Category from '../components/Category';\nimport SearchInput from '../components/SearchInput';\nimport RecipesContext from '../context/RecipesContext';\nimport { getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport Loading from '../components/Loading';\nimport '../style/recipes.css';\n\nfunction FoodRecipes() {\n  const [isFetching, setIsFetching] = useState(true);\n  const zero = 0;\n  const Twelve = 12;\n  const {\n    searchRender,\n    recipesFilters,\n    setMealRecipeId,\n    mealRecipeId,\n    setRecipesFilters,\n    btnFilter,\n    setInitialRecipes\n  } = useContext(RecipesContext);\n  const filterRecipesTwelve = recipesFilters !== null ? recipesFilters.slice(zero, Twelve) : [];\n  useEffect(() => {\n    getCurrenceRecipesFoodsName('').then(response => {\n      setRecipesFilters(response.meals);\n      setInitialRecipes(response.meals);\n      setIsFetching(false);\n    });\n  }, [setRecipesFilters]);\n\n  if (recipesFilters !== null && recipesFilters.length === 1 && btnFilter === false) {\n    const {\n      idMeal\n    } = recipesFilters[zero];\n    setMealRecipeId(idMeal);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/comidas/${idMeal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (mealRecipeId !== '') {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/comidas/${mealRecipeId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const showDetails = id => {\n    setMealRecipeId(id);\n  };\n\n  const handleClick = id => {\n    setMealRecipeId(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), searchRender ? /*#__PURE__*/React.createElement(SearchInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }) : null, isFetching ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }) : filterRecipesTwelve.map((recipe, index) => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"cards\",\n    type: \"button\",\n    onClick: () => showDetails(recipe.idMeal),\n    \"data-testid\": `${index}-recipe-card`,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Nome:\", recipe.strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${recipe.idMeal}`,\n    onClick: () => handleClick(recipe.idMeal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    width: \"163px\",\n    alt: \"receitas\",\n    src: recipe.strMealThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default FoodRecipes;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/pages/FoodRecipes.js"],"names":["React","useContext","useEffect","useState","Redirect","Link","Header","Footer","Category","SearchInput","RecipesContext","getCurrenceRecipesFoodsName","Loading","FoodRecipes","isFetching","setIsFetching","zero","Twelve","searchRender","recipesFilters","setMealRecipeId","mealRecipeId","setRecipesFilters","btnFilter","setInitialRecipes","filterRecipesTwelve","slice","then","response","meals","length","idMeal","showDetails","id","handleClick","map","recipe","index","strMeal","strMealThumb"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Category from '../components/Category';\nimport SearchInput from '../components/SearchInput';\nimport RecipesContext from '../context/RecipesContext';\nimport { getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport Loading from '../components/Loading';\nimport '../style/recipes.css';\n\nfunction FoodRecipes() {\n  const [isFetching, setIsFetching] = useState(true)\n\n  const zero = 0;\n  const Twelve = 12;\n  const {\n    searchRender,\n    recipesFilters,\n    setMealRecipeId,\n    mealRecipeId,\n    setRecipesFilters,\n    btnFilter,\n    setInitialRecipes,\n  } = useContext(RecipesContext);\n  const filterRecipesTwelve = recipesFilters !== null\n    ? recipesFilters.slice(zero, Twelve)\n    : [];\n\n  useEffect(() => {\n    getCurrenceRecipesFoodsName('').then((response) => {\n      setRecipesFilters(response.meals);\n      setInitialRecipes(response.meals);\n      setIsFetching(false)\n    });\n  }, [setRecipesFilters]);\n\n  if (\n    recipesFilters !== null\n    && recipesFilters.length === 1\n    && btnFilter === false\n  ) {\n    const { idMeal } = recipesFilters[zero];\n    setMealRecipeId(idMeal);\n    return <Redirect to={`/comidas/${idMeal}`} />;\n  }\n\n  if (mealRecipeId !== '') {\n    return <Redirect to={`/comidas/${mealRecipeId}`} />;\n  }\n\n  const showDetails = (id) => {\n    setMealRecipeId(id);\n  };\n\n  const handleClick = (id) => {\n    setMealRecipeId(id);\n  };\n\n  return (\n    <div>\n      <Header />\n      <Category />\n      {searchRender ? <SearchInput /> : null}\n      {isFetching ? <Loading /> : filterRecipesTwelve.map((recipe, index) => (\n        <button\n        className=\"cards\"\n          type=\"button\"\n          onClick={() => showDetails(recipe.idMeal)}\n          data-testid={`${index}-recipe-card`}\n          key={index}\n        >\n          <p data-testid={`${index}-card-name`}>\n            Nome:\n            {recipe.strMeal}\n          </p>\n          <div className='img-cards' >\n          <Link\n          \n            to={`/comidas/${recipe.idMeal}`}\n            onClick={() => handleClick(recipe.idMeal)}\n          >\n            <img\n            \n              data-testid={`${index}-card-img`}\n              width=\"163px\"\n              alt=\"receitas\"\n              src={recipe.strMealThumb}\n            />\n          </Link>\n          </div>\n        </button>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default FoodRecipes;\n"]},"metadata":{},"sourceType":"module"}