{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe_/Projetos-trybe/sd-07-project-recipes-app/src/pages/FoodInProgress.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport RecipesContext from '../context/RecipesContext';\nimport { TWO_THOUSAND, fetchAPI } from '../services/helpers';\nimport '../style/recipeDetail.css';\nimport CheckBoxProgress from './CheckBoxProgress';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\n\nfunction FoodInProgress() {\n  const history = useHistory();\n  const {\n    pathname\n  } = history.location;\n  const mealRecipeId = pathname.split('/')[2];\n  const [copyText, setCopyText] = useState('');\n  const [favorited, setFavorited] = useState();\n  const [buttonDone, setButtonDone] = useState(true);\n  const {\n    recipeDetailFood,\n    setMealRecipeId,\n    setRecipeDetailFood\n  } = useContext(RecipesContext);\n  useEffect(() => {\n    const getAPI = async () => {\n      const food = await fetchAPI(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealRecipeId}`);\n      const recipeFood = await food.meals;\n      setRecipeDetailFood(recipeFood[0]);\n      setMealRecipeId(mealRecipeId);\n    };\n\n    getAPI();\n  }, [setMealRecipeId, mealRecipeId, setRecipeDetailFood]);\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) localStorage.favoriteRecipes = JSON.stringify([]);\n    const favoriteStorage = JSON.parse(localStorage.favoriteRecipes).filter(recipe => recipe.id === mealRecipeId);\n\n    if (favoriteStorage.length >= 1) {\n      setFavorited(blackHeartIcon);\n    } else {\n      setFavorited(whiteHeartIcon);\n    }\n  }, [mealRecipeId]);\n\n  const handleFavoriteClick = () => {\n    if (favorited === whiteHeartIcon) {\n      setFavorited(blackHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeDetailFood.idMeal,\n        type: 'comida',\n        area: recipeDetailFood.strArea,\n        category: recipeDetailFood.strCategory,\n        alcoholicOrNot: '',\n        name: recipeDetailFood.strMeal,\n        image: recipeDetailFood.strMealThumb\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    } else {\n      setFavorited(whiteHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.filter(recipe => recipe.id !== mealRecipeId);\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    }\n  };\n\n  const handleCopyClick = () => {\n    const {\n      href\n    } = window.location;\n    const indexStart = 0;\n    const recipePath = href.substring(indexStart, href.indexOf('/in-progress'));\n    copy(recipePath);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), TWO_THOUSAND);\n  };\n\n  const handleButtonDone = () => {\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    console.log(recipeDetailFood);\n    const ingredientsUsed = inProgressRecipes.meals[mealRecipeId];\n    const allIngredients = Object.keys(recipeDetailFood).filter(key => key.includes('strIngredient') && recipeDetailFood[key] !== '' && recipeDetailFood[key] !== null);\n    console.log(ingredientsUsed.length, allIngredients.length);\n\n    if (ingredientsUsed.length === allIngredients.length) {\n      setButtonDone(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: recipeDetailFood.strMealThumb,\n    alt: \"food\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, recipeDetailFood.strMeal), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleCopyClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleFavoriteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorited,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, copyText), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, recipeDetailFood.strCategory), /*#__PURE__*/React.createElement(CheckBoxProgress, {\n    handleButtonDone: handleButtonDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, recipeDetailFood.strInstructions), /*#__PURE__*/React.createElement(\"video\", {\n    \"data-testid\": \"video\",\n    width: \"750\",\n    height: \"500\",\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: recipeDetailFood.strYoutube,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"track\", {\n    src: recipeDetailFood.strYoutube,\n    kind: \"captions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: buttonDone,\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n}\n\nexport default FoodInProgress;","map":{"version":3,"sources":["/home/guilherme/Trybe_/Projetos-trybe/sd-07-project-recipes-app/src/pages/FoodInProgress.js"],"names":["React","useContext","useEffect","useState","Link","useHistory","copy","RecipesContext","TWO_THOUSAND","fetchAPI","CheckBoxProgress","FoodInProgress","history","pathname","location","mealRecipeId","split","copyText","setCopyText","favorited","setFavorited","buttonDone","setButtonDone","recipeDetailFood","setMealRecipeId","setRecipeDetailFood","getAPI","food","recipeFood","meals","localStorage","favoriteRecipes","JSON","stringify","favoriteStorage","parse","filter","recipe","id","length","blackHeartIcon","whiteHeartIcon","handleFavoriteClick","newFavoriteStorage","concat","idMeal","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","handleCopyClick","href","window","indexStart","recipePath","substring","indexOf","setInterval","handleButtonDone","inProgressRecipes","getItem","console","log","ingredientsUsed","allIngredients","Object","keys","key","includes","shareIcon","strInstructions","strYoutube"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport RecipesContext from '../context/RecipesContext';\nimport { TWO_THOUSAND, fetchAPI } from '../services/helpers';\nimport '../style/recipeDetail.css';\nimport CheckBoxProgress from './CheckBoxProgress';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FoodInProgress() {\n  const history = useHistory();\n  const { pathname } = history.location;\n  const mealRecipeId = pathname.split('/')[2];\n\n  const [copyText, setCopyText] = useState('');\n  const [favorited, setFavorited] = useState();\n  const [buttonDone, setButtonDone] = useState(true);\n\n  const { recipeDetailFood, setMealRecipeId, setRecipeDetailFood } = useContext(\n    RecipesContext,\n  );\n\n  useEffect(() => {\n    const getAPI = async () => {\n      const food = await fetchAPI(\n        `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealRecipeId}`,\n      );\n      const recipeFood = await food.meals;\n      setRecipeDetailFood(recipeFood[0]);\n      setMealRecipeId(mealRecipeId);\n    };\n    getAPI();\n  }, [setMealRecipeId, mealRecipeId, setRecipeDetailFood]);\n\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) localStorage.favoriteRecipes = JSON.stringify([]);\n    const favoriteStorage = JSON.parse(localStorage.favoriteRecipes).filter(\n      (recipe) => recipe.id === mealRecipeId,\n    );\n    if (favoriteStorage.length >= 1) {\n      setFavorited(blackHeartIcon);\n    } else {\n      setFavorited(whiteHeartIcon);\n    }\n  }, [mealRecipeId]);\n\n  const handleFavoriteClick = () => {\n    if (favorited === whiteHeartIcon) {\n      setFavorited(blackHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.concat({\n        id: recipeDetailFood.idMeal,\n        type: 'comida',\n        area: recipeDetailFood.strArea,\n        category: recipeDetailFood.strCategory,\n        alcoholicOrNot: '',\n        name: recipeDetailFood.strMeal,\n        image: recipeDetailFood.strMealThumb,\n      });\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    } else {\n      setFavorited(whiteHeartIcon);\n      const favoriteStorage = JSON.parse(localStorage.favoriteRecipes);\n      const newFavoriteStorage = favoriteStorage.filter(\n        (recipe) => recipe.id !== mealRecipeId,\n      );\n      localStorage.favoriteRecipes = JSON.stringify(newFavoriteStorage);\n    }\n  };\n\n  const handleCopyClick = () => {\n    const { href } = window.location;\n    const indexStart = 0;\n    const recipePath = href.substring(indexStart, href.indexOf('/in-progress'));\n    copy(recipePath);\n    setCopyText('Link copiado!');\n    setInterval(() => setCopyText(''), TWO_THOUSAND);\n  };\n\n  const handleButtonDone = () => {\n    const inProgressRecipes = JSON.parse(\n      localStorage.getItem('inProgressRecipes'),\n    );\n    console.log(recipeDetailFood);\n    const ingredientsUsed = inProgressRecipes.meals[mealRecipeId];\n\n    const allIngredients = Object\n      .keys(recipeDetailFood).filter(\n        (key) => key\n          .includes('strIngredient')\n          && recipeDetailFood[key] !== ''\n          && recipeDetailFood[key] !== null,\n      );\n\n    console.log(ingredientsUsed.length, allIngredients.length);\n\n    if (ingredientsUsed.length === allIngredients.length) {\n      setButtonDone(false);\n    }\n  };\n\n  return (\n    <div>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ recipeDetailFood.strMealThumb }\n        alt=\"food\"\n      />\n      <h2 data-testid=\"recipe-title\">{recipeDetailFood.strMeal}</h2>\n      <button type=\"button\" onClick={ handleCopyClick }>\n        <img data-testid=\"share-btn\" src={ shareIcon } alt=\"share\" />\n      </button>\n      <button type=\"button\" onClick={ handleFavoriteClick }>\n        <img data-testid=\"favorite-btn\" src={ favorited } alt=\"favorite\" />\n      </button>\n      <p>{copyText}</p>\n      <p data-testid=\"recipe-category\">{recipeDetailFood.strCategory}</p>\n      <CheckBoxProgress handleButtonDone={ handleButtonDone } />\n      <p data-testid=\"instructions\">{recipeDetailFood.strInstructions}</p>\n      <video data-testid=\"video\" width=\"750\" height=\"500\" controls>\n        <source src={ recipeDetailFood.strYoutube } type=\"video/mp4\" />\n        <track src={ recipeDetailFood.strYoutube } kind=\"captions\" />\n      </video>\n      <Link to=\"/receitas-feitas\">\n        <button\n          disabled={ buttonDone }\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default FoodInProgress;\n"]},"metadata":{},"sourceType":"module"}