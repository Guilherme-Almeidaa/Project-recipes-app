{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe_/Projetos-trybe/sd-07-project-recipes-app/src/pages/CheckBoxProgress.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NINE, TWENTY_ONE, THIRTY_SIX, TWENTY_NINE, FOURTY_NINE, FIFTY_ONE } from '../services/helpers';\nimport RecipesContext from '../context/RecipesContext';\nimport history from '../history/history';\nimport '../App.css'; // informações da tela\n\nconst {\n  pathname\n} = history.location;\nconst DrinkOrFood = pathname.includes('bebidas') ? 'cocktails' : 'meals';\n\nconst toggleCheckboxChange = (e, recipe, index) => {\n  const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const idRecipe = Object.values(recipe)[0];\n  const targetIngredient = [index];\n  const savedIngredients = progress[DrinkOrFood][idRecipe];\n\n  const concat = (...arrays) => [].concat(...arrays.filter(Array.isArray));\n\n  const newIndredients = concat(savedIngredients, targetIngredient);\n  const newProgress = { ...progress,\n    [DrinkOrFood]: {\n      [idRecipe]: newIndredients\n    }\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  console.log(newProgress);\n};\n\nconst handleChecked = (recipe, index) => {\n  const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const idRecipe = Object.values(recipe)[0];\n  return progress[DrinkOrFood][idRecipe] && progress[DrinkOrFood][idRecipe].includes(index) ? true : null;\n};\n\nfunction CheckBoxProgress(props) {\n  const {\n    recipeDetailDrink,\n    recipeDetailFood\n  } = useContext(RecipesContext);\n  useEffect(() => {\n    const startProgress = {\n      cocktails: {},\n      meals: {}\n    };\n    const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!progress) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(startProgress));\n    }\n  }, []);\n\n  const handleIngredientsInProgress = (recipe, initial, middle, end) => {\n    const ingredients = Object.values(recipe).slice(initial, middle);\n    const measures = Object.values(recipe).slice(middle, end);\n    return ingredients.filter(recipes => recipes !== null && recipes !== '').map((ingredient, index) => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      key: `${index}-ingredient`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => {\n        toggleCheckboxChange(e, recipe, index);\n        props.handleButtonDone();\n      },\n      type: \"checkbox\",\n      id: `${index}-ingredient`,\n      checked: handleChecked(recipe, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), ' ', /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: `${index}-ingredient`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, `${ingredient} - ${measures[index]}`, ' ')));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, pathname.includes('bebidas') ? handleIngredientsInProgress(recipeDetailDrink, TWENTY_ONE, THIRTY_SIX, FIFTY_ONE) : handleIngredientsInProgress(recipeDetailFood, NINE, TWENTY_NINE, FOURTY_NINE));\n}\n\nCheckBoxProgress.propTypes = {\n  handleButtonDone: PropTypes.func.isRequired\n};\nexport default CheckBoxProgress;","map":{"version":3,"sources":["/home/guilherme/Trybe_/Projetos-trybe/sd-07-project-recipes-app/src/pages/CheckBoxProgress.js"],"names":["React","useContext","useEffect","PropTypes","NINE","TWENTY_ONE","THIRTY_SIX","TWENTY_NINE","FOURTY_NINE","FIFTY_ONE","RecipesContext","history","pathname","location","DrinkOrFood","includes","toggleCheckboxChange","e","recipe","index","progress","JSON","parse","localStorage","getItem","idRecipe","Object","values","targetIngredient","savedIngredients","concat","arrays","filter","Array","isArray","newIndredients","newProgress","setItem","stringify","console","log","handleChecked","CheckBoxProgress","props","recipeDetailDrink","recipeDetailFood","startProgress","cocktails","meals","handleIngredientsInProgress","initial","middle","end","ingredients","slice","measures","recipes","map","ingredient","handleButtonDone","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NINE,\n  TWENTY_ONE,\n  THIRTY_SIX,\n  TWENTY_NINE,\n  FOURTY_NINE,\n  FIFTY_ONE,\n} from '../services/helpers';\nimport RecipesContext from '../context/RecipesContext';\nimport history from '../history/history';\nimport '../App.css';\n\n// informações da tela\nconst { pathname } = history.location;\nconst DrinkOrFood = pathname.includes('bebidas') ? 'cocktails' : 'meals';\n\nconst toggleCheckboxChange = (e, recipe, index) => {\n  const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const idRecipe = Object.values(recipe)[0];\n  const targetIngredient = [index];\n  const savedIngredients = progress[DrinkOrFood][idRecipe];\n  const concat = (...arrays) => [].concat(...arrays.filter(Array.isArray));\n  const newIndredients = concat(savedIngredients, targetIngredient);\n  const newProgress = {\n    ...progress,\n    [DrinkOrFood]: {\n      [idRecipe]: newIndredients,\n    },\n  };\n  localStorage.setItem('inProgressRecipes', JSON.stringify(newProgress));\n  console.log(newProgress);\n};\n\nconst handleChecked = (recipe, index) => {\n  const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const idRecipe = Object.values(recipe)[0];\n\n  return progress[DrinkOrFood][idRecipe]\n    && progress[DrinkOrFood][idRecipe].includes(index)\n    ? true\n    : null;\n};\n\nfunction CheckBoxProgress(props) {\n  const { recipeDetailDrink, recipeDetailFood } = useContext(RecipesContext);\n\n  useEffect(() => {\n    const startProgress = {\n      cocktails: {},\n      meals: {},\n    };\n\n    const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (!progress) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(startProgress));\n    }\n  }, []);\n\n  const handleIngredientsInProgress = (recipe, initial, middle, end) => {\n    const ingredients = Object.values(recipe).slice(initial, middle);\n    const measures = Object.values(recipe).slice(middle, end);\n    return ingredients\n      .filter((recipes) => recipes !== null && recipes !== '')\n      .map((ingredient, index) => (\n        <div\n          data-testid={ `${index}-ingredient-step` }\n          key={ `${index}-ingredient` }\n        >\n          <input\n            onChange={ (e) => {\n              toggleCheckboxChange(e, recipe, index);\n              props.handleButtonDone();\n            } }\n            type=\"checkbox\"\n            id={ `${index}-ingredient` }\n            checked={ handleChecked(recipe, index) }\n          />\n          {' '}\n          <label htmlFor={ `${index}-ingredient` } key={ index }>\n            {`${ingredient} - ${measures[index]}`}\n            {' '}\n          </label>\n        </div>\n      ));\n  };\n\n  return (\n    <div>\n      {pathname.includes('bebidas')\n        ? handleIngredientsInProgress(\n          recipeDetailDrink,\n          TWENTY_ONE,\n          THIRTY_SIX,\n          FIFTY_ONE,\n        )\n        : handleIngredientsInProgress(\n          recipeDetailFood,\n          NINE,\n          TWENTY_NINE,\n          FOURTY_NINE,\n        )}\n    </div>\n  );\n}\n\nCheckBoxProgress.propTypes = {\n  handleButtonDone: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxProgress;\n"]},"metadata":{},"sourceType":"module"}