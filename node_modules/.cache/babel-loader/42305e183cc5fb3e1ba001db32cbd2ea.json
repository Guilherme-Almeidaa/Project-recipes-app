{"ast":null,"code":"export const getCurrenceRecipesFoodsIngredients = Url => {\n  fetch(Url).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getCurrenceRecipesFoodsName = Url => {\n  fetch(Url).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getCurrenceRecipesFoodsFirstLetter = Url => {\n  fetch(Url).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/services/foodAPI.js"],"names":["getCurrenceRecipesFoodsIngredients","Url","fetch","then","response","json","ok","Promise","resolve","reject","getCurrenceRecipesFoodsName","getCurrenceRecipesFoodsFirstLetter"],"mappings":"AAAA,OAAO,MAAMA,kCAAkC,GAAIC,GAAD,IAAS;AACvDC,EAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACOC,QAAD,IACFA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOE,IAAD,IAAWD,QAAQ,CAACE,EAAT,GAAcC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAd,GAAsCE,OAAO,CAACE,MAAR,CAAeJ,IAAf,CADvD,CAFJ;AAKH,CANM;AAQP,OAAO,MAAMK,2BAA2B,GAAIT,GAAD,IAAS;AAChDC,EAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACOC,QAAD,IACFA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOE,IAAD,IAAWD,QAAQ,CAACE,EAAT,GAAcC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAd,GAAsCE,OAAO,CAACE,MAAR,CAAeJ,IAAf,CADvD,CAFJ;AAKH,CANM;AASP,OAAO,MAAMM,kCAAkC,GAAIV,GAAD,IAAS;AACvDC,EAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACOC,QAAD,IACFA,QAAQ,CAACC,IAAT,GACCF,IADD,CACOE,IAAD,IAAWD,QAAQ,CAACE,EAAT,GAAcC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAd,GAAsCE,OAAO,CAACE,MAAR,CAAeJ,IAAf,CADvD,CAFJ;AAKH,CANM","sourcesContent":["export const getCurrenceRecipesFoodsIngredients = (Url) => {\n    fetch(Url)\n    .then((response) => (\n        response.json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n}\n\nexport const getCurrenceRecipesFoodsName = (Url) => {\n    fetch(Url)\n    .then((response) => (\n        response.json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n}\n\n\nexport const getCurrenceRecipesFoodsFirstLetter = (Url) => {\n    fetch(Url)\n    .then((response) => (\n        response.json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}