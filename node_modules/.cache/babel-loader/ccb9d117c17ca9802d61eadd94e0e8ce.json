{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\n\nfunction Provider({\n  children\n}) {\n  const messageAlert = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n  const zero = 0;\n\n  const showAlertNotFound = () => alert(messageAlert);\n\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n\n  const checkRecipe = () => {\n    if (recipesFilters === null) {\n      showAlertNotFound();\n    }\n  };\n\n  useEffect(checkRecipe, [getSearchBtn]);\n  console.log(recipesFilters);\n  useEffect(() => {\n    if (recipesFilters !== null && recipesFilters.length === 1) {\n      const lastHistory = history.location.pathname;\n      let id;\n\n      if (lastHistory === '/bebidas') {\n        const {\n          idDrink\n        } = recipesFilters[zero];\n        id = idDrink;\n      } else {\n        const {\n          idMeal\n        } = recipesFilters[zero];\n        id = idMeal;\n      }\n\n      history.push(`${lastHIstory}/${id}`);\n    }\n  }, [recipesFilters]);\n  const context = {\n    filterSearch,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setRecipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setSearchRender\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","history","Provider","children","messageAlert","zero","showAlertNotFound","alert","searchRender","setSearchRender","filterSearch","setFilterSearch","recipesFilters","setRecipesFilters","searchInput","setSearchInput","getSearchBtn","setSearchBtn","checkRecipe","console","log","length","lastHistory","location","pathname","id","idDrink","idMeal","push","lastHIstory","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAMC,YAAY,GAAG,kEAArB;AACA,QAAMC,IAAI,GAAG,CAAb;;AACA,QAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAACH,YAAD,CAArC;;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,YAAf,IAA+BpB,QAAQ,CAAC,KAAD,CAA7C;;AAEA,QAAMqB,WAAW,GAAG,MAAM;AACxB,QAAIN,cAAc,KAAK,IAAvB,EAA6B;AAC3BN,MAAAA,iBAAiB;AAClB;AACF,GAJD;;AAMAR,EAAAA,SAAS,CACPoB,WADO,EAEP,CAACF,YAAD,CAFO,CAAT;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,cAAc,KAAK,IAAnB,IAA2BA,cAAc,CAACS,MAAf,KAA0B,CAAzD,EAA4D;AAC1D,YAAMC,WAAW,GAAGrB,OAAO,CAACsB,QAAR,CAAiBC,QAArC;AACA,UAAIC,EAAJ;;AACA,UAAIH,WAAW,KAAK,UAApB,EAAgC;AAC9B,cAAM;AAAEI,UAAAA;AAAF,YAAcd,cAAc,CAACP,IAAD,CAAlC;AACAoB,QAAAA,EAAE,GAAGC,OAAL;AACD,OAHD,MAGO;AACL,cAAM;AAAEC,UAAAA;AAAF,YAAaf,cAAc,CAACP,IAAD,CAAjC;AACAoB,QAAAA,EAAE,GAAGE,MAAL;AACD;;AACD1B,MAAAA,OAAO,CAAC2B,IAAR,CAAc,GAAEC,WAAY,IAAGJ,EAAG,EAAlC;AACD;AACF,GAbQ,EAaN,CAACb,cAAD,CAbM,CAAT;AAeA,QAAMkB,OAAO,GAAG;AACdpB,IAAAA,YADc;AAEdF,IAAAA,YAFc;AAGdM,IAAAA,WAHc;AAIdE,IAAAA,YAJc;AAKdJ,IAAAA,cALc;AAMdC,IAAAA,iBANc;AAOdI,IAAAA,YAPc;AAQdF,IAAAA,cARc;AASdJ,IAAAA,eATc;AAUdF,IAAAA;AAVc,GAAhB;AAaA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGqB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,QADH,CADF;AAKD;;AAEDD,QAAQ,CAAC6B,SAAT,GAAqB;AACnB5B,EAAAA,QAAQ,EAAEJ,SAAS,CAACiC,IAAV,CAAeC;AADN,CAArB;AAIA,eAAe/B,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\n\nfunction Provider({ children }) {\n  const messageAlert = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n  const zero = 0;\n  const showAlertNotFound = () => alert(messageAlert);\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n\n  const checkRecipe = () => {\n    if (recipesFilters === null) {\n      showAlertNotFound();\n    }\n  };\n\n  useEffect(\n    checkRecipe,\n    [getSearchBtn],\n  );\n\n  console.log(recipesFilters)\n  \n  useEffect(() => {\n    if (recipesFilters !== null && recipesFilters.length === 1) {\n      const lastHistory = history.location.pathname;\n      let id;\n      if (lastHistory === '/bebidas') {\n        const { idDrink } = recipesFilters[zero];\n        id = idDrink;\n      } else {\n        const { idMeal } = recipesFilters[zero];\n        id = idMeal;\n      }\n      history.push(`${lastHIstory}/${id}`);\n    }\n  }, [recipesFilters]);\n\n  const context = {\n    filterSearch,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    recipesFilters,\n    setRecipesFilters,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setSearchRender,\n  };\n\n  return (\n    <RecipesContext.Provider value={ context }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}