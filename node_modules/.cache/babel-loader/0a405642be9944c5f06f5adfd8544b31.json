{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\nimport { getCurrenceRecipesFoodsFirstLetter, getCurrenceRecipesFoodsIngredients, getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport { getCurrenceRecipesDrinksFirstLetter, getCurrenceRecipesDrinksIngredients, getCurrenceRecipesDrinksName } from '../services/drinkAPI';\n\nfunction Provider({\n  children\n}) {\n  // const retrieveEmail = () => {\n  // const storageEmail = JSON.parse(localStorage.getItem('user'));\n  // return storageEmail === undefined ? '' : storageEmail.email;\n  // };\n  const [userEmail, setUserEmail] = useState('');\n  const [searchRender, setSearchRender] = useState(false);\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n  useEffect(() => {\n    if (history.location.pathname === '/comidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesFoodsIngredients(searchInput).then(response => setRecipesFilters(response.meals));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesFoodsName(searchInput).then(response => setRecipesFilters(response.meals));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          alert(\"Sua busca deve conter somente 1 (um) caracter\");\n        } else {\n          getCurrenceRecipesFoodsFirstLetter(searchInput).then(response => setRecipesFilters(response.meals));\n        }\n      }\n    } else if (history.location.pathname === '/bebidas') {\n      if (filterSearch === 'ingredients-input') {\n        getCurrenceRecipesDrinksIngredients(searchInput).then(response => setRecipesFilters(response.meals));\n      } else if (filterSearch === 'name-input') {\n        getCurrenceRecipesDrinksName(searchInput).then(response => setRecipesFilters(response.meals));\n      } else if (filterSearch === 'first-letter-input') {\n        if (searchInput.length > 1) {\n          alert(\"Sua busca deve conter somente 1 (um) caracter\");\n        } else {\n          getCurrenceRecipesDrinksFirstLetter(searchInput).then(response => setRecipesFilters(response.meals));\n        }\n      }\n    }\n  }, [getSearchBtn]);\n  console.log(recipesFilters);\n  const context = {\n    filterSearch,\n    userEmail,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setUserEmail,\n    setSearchRender\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-recipes-app/src/context/Provider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","history","getCurrenceRecipesFoodsFirstLetter","getCurrenceRecipesFoodsIngredients","getCurrenceRecipesFoodsName","getCurrenceRecipesDrinksFirstLetter","getCurrenceRecipesDrinksIngredients","getCurrenceRecipesDrinksName","Provider","children","userEmail","setUserEmail","searchRender","setSearchRender","filterSearch","setFilterSearch","recipesFilters","setRecipesFilters","searchInput","setSearchInput","getSearchBtn","setSearchBtn","location","pathname","then","response","meals","length","alert","console","log","context","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport history from '../history/history';\nimport { getCurrenceRecipesFoodsFirstLetter, getCurrenceRecipesFoodsIngredients, getCurrenceRecipesFoodsName } from '../services/foodAPI';\nimport { getCurrenceRecipesDrinksFirstLetter, getCurrenceRecipesDrinksIngredients, getCurrenceRecipesDrinksName } from '../services/drinkAPI'\n\n\nfunction Provider({ children }) {\n  // const retrieveEmail = () => {\n  // const storageEmail = JSON.parse(localStorage.getItem('user'));\n  // return storageEmail === undefined ? '' : storageEmail.email;\n  // };\n\n  const [userEmail, setUserEmail] = useState('');\n  const [searchRender, setSearchRender] = useState(false)\n  const [filterSearch, setFilterSearch] = useState('');\n  const [recipesFilters, setRecipesFilters] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [getSearchBtn, setSearchBtn] = useState(false);\n\n\n\n  useEffect(() => {\n    if(history.location.pathname  === '/comidas') {\n    if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesFoodsIngredients(searchInput)\n        .then((response) => setRecipesFilters(response.meals))\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesFoodsName(searchInput)\n        .then((response) => setRecipesFilters(response.meals))\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        alert(\"Sua busca deve conter somente 1 (um) caracter\")\n      } else {\n        getCurrenceRecipesFoodsFirstLetter(searchInput)\n          .then((response) => setRecipesFilters(response.meals))\n      }\n    }\n  } else if (history.location.pathname === '/bebidas') {\n    if (filterSearch === 'ingredients-input') {\n      getCurrenceRecipesDrinksIngredients(searchInput)\n        .then((response) => setRecipesFilters(response.meals))\n    } else if (filterSearch === 'name-input') {\n      getCurrenceRecipesDrinksName(searchInput)\n        .then((response) => setRecipesFilters(response.meals))\n    } else if (filterSearch === 'first-letter-input') {\n      if (searchInput.length > 1) {\n        alert(\"Sua busca deve conter somente 1 (um) caracter\")\n      } else {\n        getCurrenceRecipesDrinksFirstLetter(searchInput)\n          .then((response) => setRecipesFilters(response.meals))\n      }\n    }\n  }\n  }, [getSearchBtn])\n  console.log(recipesFilters)\n  const context = {\n    filterSearch,\n    userEmail,\n    searchRender,\n    searchInput,\n    getSearchBtn,\n    setSearchBtn,\n    setSearchInput,\n    setFilterSearch,\n    setUserEmail,\n    setSearchRender,\n  };\n\n  return (\n    <RecipesContext.Provider value={context}>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}